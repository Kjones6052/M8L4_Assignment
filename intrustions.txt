Module 8 Lesson 4: CSS Advanced Properties 

1. Enhancing Web Design with RGBA Colors
Objective:
The aim of this assignment is to explore the use of RGBA (Red, Green, Blue, Alpha) colors in web design to create visually appealing web pages 
with enhanced aesthetics and user experience.

Problem Statement:
Modern web design requires more than just solid colors; it demands subtlety, depth, and interactivity. RGBA colors allow designers to add opacity 
to color values, offering the ability to overlay elements and create more dynamic, layered designs. Your task is to apply RGBA colors to enhance 
the design of a basic web page, focusing on background colors, text, and interactive elements like buttons and links.

Task 1: Apply RGBA Background Colors
Create a CSS class named .background-fade and apply it to a div element. Use RGBA to set a semi-transparent background color.
status: incomplete

Task 2: Enhance Text Visibility with RGBA
Enhance the readability of a header element (h1) by adding a text shadow using RGBA for color and opacity, creating a subtle shadow effect.
status: incomplete

Task 3: Interactive Buttons with RGBA Hover Effects
Design a button with a solid RGBA background color. Implement a hover effect that changes the button's background color to a different RGBA value.
status: incomplete

2. Creating Interactive Web Elements with CSS Animations and Transitions
Objective:
The aim of this assignment is to leverage CSS animations and transitions to enhance the interactivity and visual appeal of web elements. Through 
practical tasks, students will learn to apply smooth transitions and dynamic animations to buttons, links, and other interactive components on a 
web page.

Problem Statement:
A static webpage fails to engage users effectively. By incorporating CSS animations and transitions, web developers can create a more engaging 
and interactive experience. This assignment challenges you to apply CSS animations and transitions to bring life to web elements, improving user 
engagement and the overall aesthetic of the webpage.

Task 1: Smooth Hover Transition for Links
Create a CSS transition effect for all hyperlink (<a>) elements so that their color smoothly changes when hovered over.
status: incomplete

Task 2: Animated Button on Click
Implement a keyframe animation for a button that slightly increases in size when clicked, giving a visual cue of interaction.
status: incomplete

Task 3: Continuous Rotation Animation for an Icon
Apply a continuous rotation animation to an icon or image, creating a visually captivating element on the page.
status: incomplete